---
import { markdownify } from "@/lib/utils/textConverter";
import type { PricingItem } from "@/types";
import ImageMod from "./ImageMod.astro";

const {
  image,
  title_prefix,
  title,
  plan_prefix,
  plan,
  price,
  price_suffix,
  button,
  list,
} = Astro.props as PricingItem;
---

<div
  class="px-6 2xl:px-12 py-8 md:py-10 bg-theme-light hover:bg-white hover:shadow gap-y-5 group transition-all duration-300">
  <div class="row gy-4 items-center">
    <!-- COLUMN 1 -->
    <div class="md:col-6 2xl:col-3">
      {image && <ImageMod src={image} alt={title} />}
      <div class="mt-10 md:mt-12">
        {title_prefix && <p class="pb-2" set:html={markdownify(title_prefix)} />}
        {title && <span class="block h5" set:html={markdownify(title)} />}
      </div>
    </div>

    <!-- COLUMN 2 -->
    <div class="md:col-6 2xl:col-3">
      <div class="flex flex-col gap-y-10 justify-between">
        <div>
          {plan_prefix && <p class="pb-2" set:html={markdownify(plan_prefix)} />}
          {plan && <span class="block h5" set:html={markdownify(plan)} />}
        </div>
        <div>
          {price && <strong class="inline h2" set:html={markdownify(price)} />}
          {price_suffix && <span class="font-bold" set:html={markdownify(price_suffix)} />}
        </div>
      </div>
    </div>

    {
      list && (
        <div class="md:col-6 2xl:col-3">
          <ul class="space-y-3">
            {list.map((item) => (
              <li class="relative flex items-center gap-x-2 min-w-max">
                <svg
                  width="18"
                  height="18"
                  viewBox="0 0 18 18"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg">
                  <circle cx="9" cy="9" r="9" fill="#6EE272" />
                  <path
                    d="M4.91016 9.00044L7.77379 11.8641L13.092 6.5459"
                    stroke="white"
                    stroke-width="3"
                  />
                </svg>

                <span class="font-light text-base-sm" set:html={markdownify(item)} />
              </li>
            ))}
          </ul>
        </div>
      )
    }

    {
      button && button.enable && (
        <div class="md:col-6 2xl:col-3">
          <a
            href={button.link}
            class="btn btn-sm btn-outline-primary group-hover:bg-primary hover:text-dark group-hover:border-transparent"
            set:html={markdownify(button.label)}
          />
        </div>
      )
    }
  </div>
</div>
