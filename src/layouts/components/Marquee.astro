---
import type { Button } from "@/types";
import ImageMod from "@/components/ImageMod.astro";

interface integration {
  title: string;
  description: string;
  image: string;
  image_alt: string;
  link: string;
  direction: string;
  cta_button: Button;
}

const {
  marquee_contents,
  className,
  layout,
  reverse,
  gutter = "20",
} = Astro.props;
---

<div class={`marquee-container ${className ? className : ""}`}>
  <div
    class={`flex relative ${layout === "boxed" ? "gap-4" : `gap-${gutter}`}`}>
    <div
      class={`flex items-center marquee-wrapper justify-around min-w-full shrink-0 gap-${gutter} ${reverse ? "reverse" : ""}`}>
      {
        layout === "boxed"
          ? marquee_contents &&
            marquee_contents.map(
              ({ title, image, link, image_alt, direction }: integration) =>
                direction == "right" && (
                  <div class="flex flex-col justify-center items-center gap-y-4 mx-4 bg-white shadow py-8 w-[150px] md:w-[200px]">
                    <a href={link} class="rounded-full border inline-block">
                      <ImageMod
                        src={image}
                        alt={image_alt}
                        width={80}
                        height={80}
                        class="max-md:w-10"
                      />
                    </a>
                    <h3 class="text-base-sm md:text-base font-medium">
                      {title}
                    </h3>
                  </div>
                )
            )
          : marquee_contents &&
            marquee_contents.map(
              ({ image, alt }: { image: string; alt: string }) => (
                <img src={image} alt={alt} width="154" height="48" />
              )
            )
      }
    </div>
    <div
      class={`flex items-center marquee-wrapper justify-around min-w-full shrink-0 gap-${gutter} ${reverse ? "reverse" : ""}`}>
      {
        layout === "boxed"
          ? marquee_contents &&
            marquee_contents.map(
              ({ title, image, link, image_alt, direction }: integration) =>
                direction == "right" && (
                  <div class="flex flex-col justify-center items-center gap-y-4 mx-4 bg-white shadow py-8 w-[150px] md:w-[200px]">
                    <a href={link} class="rounded-full border inline-block">
                      <ImageMod
                        src={image}
                        alt={image_alt}
                        width={80}
                        height={80}
                        class="max-md:w-10"
                      />
                    </a>
                    <h3 class="text-base-sm md:text-base font-medium">
                      {title}
                    </h3>
                  </div>
                )
            )
          : marquee_contents &&
            marquee_contents.map(
              ({ image, alt }: { image: string; alt: string }) => (
                <img src={image} alt={alt} width="154" height="48" />
              )
            )
      }
    </div>
  </div>
</div>
