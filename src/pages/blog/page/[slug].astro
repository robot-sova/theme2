---
import AnimatedCircles from "@/components/AnimatedCircles.astro";
import BlogCard from "@/components/BlogCard.astro";
import ImageMod from "@/components/ImageMod.astro";
import Pagination from "@/components/Pagination.astro";
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";
import { markdownify } from "@/lib/utils/textConverter";
import { getEntry } from "astro:content";

const BLOG_FOLDER = "blog";

const { slug } = Astro.params;
const postIndex = await getEntry(BLOG_FOLDER, "-index");
const posts = await getSinglePage(BLOG_FOLDER);
const sortedPosts = sortByDate(posts);
const totalPages = Math.ceil(posts.length / config.settings.pagination);
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
export async function getStaticPaths() {
  const BLOG_FOLDER = "blog";
  const posts = await getSinglePage(BLOG_FOLDER);
  const totalPages = Math.ceil(posts.length / config.settings.pagination);
  const paths = [];

  for (let i = 1; i < totalPages; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}
---

<Base
  title={postIndex.data.title}
  meta_title={postIndex.data.meta_title}
  image={postIndex.data.image}
  description={postIndex.data.description}>
  <section class="overflow-hidden isolate">
    <div class="container-light relative">
      <h2 class="mb-12 text-h1">Recent Blog</h2>
      <div class="row gx-4 gy-4 items-start">
        <div class="lg:col-8 space-y-7 lg:pe-10">
          {
            sortedPosts
              .slice(5, sortedPosts.length)
              .map((post) => <BlogCard layout="horizontal" content={post} />)
          }

          <Pagination
            section={BLOG_FOLDER}
            currentPage={currentPage}
            totalPages={totalPages}
          />
        </div>
        {
          config.subscription && config.subscription.enable && (
            <div class="lg:col-4">
              <div class="bg-theme-dark text-white relative px-9 text-center py-40 overflow-hidden">
                {config.subscription.title && (
                  <h3
                    class="text-white mb-11 h4"
                    set:html={markdownify(config.subscription.title)}
                  />
                )}

                <form method="post" action={config.subscription.form_action}>
                  <input
                    type="email"
                    name="email"
                    id="email"
                    required
                    placeholder="Enter Your Email"
                    class="bg-transparent w-full border-white text-white text-center"
                  />
                  <button class="btn btn-primary w-full mt-5">
                    Subscribe Now
                  </button>
                </form>

                <ImageMod
                  src="/images/svg/shapes/triangles-2.svg"
                  alt="Shape"
                  class="absolute top-0 left-0 -translate-x-1/3 -translate-y-2/4"
                />
                <ImageMod
                  src="/images/svg/shapes/circle-grills.svg"
                  alt="Shape"
                  class="absolute bottom-0 right-0 rotate-90 translate-y-1/3"
                />
              </div>
            </div>
          )
        }
      </div>

      <div
        class="absolute left-0 bottom-0 translate-y-1/2 -translate-x-1/2 -z-10"
        data-aos="fade-in">
        <AnimatedCircles />
      </div>
    </div>
  </section>
</Base>
