---
import Logo from "@/components/Logo.astro";
import MegaMenuItem from "@/components/MegaMenuItem.astro";
import config from "@/config/config.json";
import menu from "@/config/menu.json";
import { markdownify } from "@/lib/utils/textConverter";

export interface ChildNavigationLink {
  icon: string;
  name: string;
  description: string;
  url: string;
}

export interface NavigationLink {
  name: string;
  url: string;
  hasMegaMenu?: boolean;
  hasChildren?: boolean;
  hasExtraMenu?: boolean;
  extraMenuTitle?: string;
  extraMenu?: NavigationLink[];
  children?: ChildNavigationLink[];
}

const main = menu.main as NavigationLink[];
const { announcement, navigation_button, settings } = config;
const { pathname } = Astro.url;
---

<div class={`z-30 ${settings.sticky_header && "sticky top-0"}`}>
  {
    announcement.enable && (
      <div
        class="bg-dark text-white py-2 md:py-1 relative"
        id="close-header-parent">
        <p
          class="text-sm md:text-base-sm text-center px-10 text-white [&>a]:underline-offset-2 [&>a]:font-medium [&>a]:underline"
          set:html={markdownify(announcement.content)}
        />

        <button
          id="close-header-learn-more"
          aria-label="Close Notification"
          class="absolute right-3 md:right-12 lg:right-16 top-1/2 -translate-y-1/2">
          <svg
            width="26"
            height="26"
            viewBox="0 0 26 26"
            fill="none"
            xmlns="http://www.w3.org/2000/svg">
            <g clip-path="url(#clip0_3650_15315)">
              <path
                d="M15.8052 8.6665L12.9993 11.4723L10.1935 8.6665L8.66602 10.194L11.4718 12.9998L8.66602 15.8057L10.1935 17.3332L12.9993 14.5273L15.8052 17.3332L17.3327 15.8057L14.5268 12.9998L17.3327 10.194L15.8052 8.6665ZM12.9993 2.1665C7.00851 2.1665 2.16602 7.009 2.16602 12.9998C2.16602 18.9907 7.00851 23.8332 12.9993 23.8332C18.9902 23.8332 23.8327 18.9907 23.8327 12.9998C23.8327 7.009 18.9902 2.1665 12.9993 2.1665ZM12.9993 21.6665C8.22185 21.6665 4.33268 17.7773 4.33268 12.9998C4.33268 8.22234 8.22185 4.33317 12.9993 4.33317C17.7768 4.33317 21.666 8.22234 21.666 12.9998C21.666 17.7773 17.7768 21.6665 12.9993 21.6665Z"
                fill="white"
              />
            </g>
            <defs>
              <clipPath id="clip0_3650_15315">
                <rect width="26" height="26" fill="white" />
              </clipPath>
            </defs>
          </svg>
        </button>
      </div>
    )
  }
  <header class="header">
    <nav class="navbar container">
      <!-- logo -->
      <div class="order-0">
        <Logo />
      </div>

      <!-- navbar toggler -->
      <input id="nav-toggle" type="checkbox" class="hidden" />
      <label
        for="nav-toggle"
        class="order-3 cursor-pointer flex items-center lg:hidden text-dark lg:order-1">
        <svg
          id="show-button"
          class="h-6 fill-current block"
          viewBox="0 0 20 20">
          <title>Menu Open</title>
          <path d="M0 3h20v2H0V3z m0 6h20v2H0V9z m0 6h20v2H0V0z"></path>
        </svg>
        <svg
          id="hide-button"
          class="h-6 fill-current hidden"
          viewBox="0 0 20 20">
          <title>Menu Close</title>
          <polygon
            points="11 9 22 9 22 11 11 11 11 22 9 22 9 11 -2 11 -2 9 9 9 9 -2 11 -2"
            transform="rotate(45 10 10)">
          </polygon>
        </svg>
      </label>
      <!-- /navbar toggler -->

      <!-- Navigation Menu -->
      <ul
        id="nav-menu"
        class="navbar-nav order-3 hidden w-full pb-6 lg:order-1 lg:flex lg:w-auto lg:pb-0">
        <!-- Main Menu -->
        {
          main.map((menu) => (
            <>
              {menu.hasChildren || menu.hasMegaMenu || menu.hasExtraMenu ? (
                <li
                  class={`nav-item nav-dropdown group ${menu.hasChildren ? "relative" : ""}`}>
                  <span
                    class={`nav-link inline-flex items-center middle ${
                      menu.children?.map(({ url }) => url).includes(pathname) ||
                      menu.children
                        ?.map(({ url }) => `${url}/`)
                        .includes(pathname)
                        ? "active"
                        : ""
                    }`}>
                    {menu.name}
                    <span class="arrow-icon">
                      <svg class="h-4 w-4 fill-current" viewBox="0 0 20 20">
                        <path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" />
                      </svg>
                    </span>
                  </span>

                  {(menu.hasMegaMenu || menu.hasExtraMenu) &&
                    !menu.hasChildren && (
                      <div
                        class={`mega-dropdown hidden lg:group-hover:block mx-auto ${menu.hasExtraMenu && !menu.hasMegaMenu ? "max-w-[500px]" : !menu.hasExtraMenu && menu.hasMegaMenu ? "max-w-[800px]" : ""}`}>
                        <div
                          class={`grid ${menu.hasExtraMenu && menu.hasMegaMenu ? "grid-cols-3" : !menu.hasMegaMenu || !menu.hasExtraMenu ? "grid-cols-1" : ""}`}>
                          {menu.hasMegaMenu && (
                            <div
                              class={`col-span-2 grid grid-cols-2 ${menu.hasExtraMenu ? "mr-3 border-r" : ""}`}
                              data-aos="fade-in">
                              {menu.children?.map((child) => (
                                <MegaMenuItem
                                  image={child.icon}
                                  title={child.name}
                                  href={child.url}
                                  description={child.description}
                                />
                              ))}
                            </div>
                          )}

                          {/* Extra Menu For Desktop Devices */}
                          {menu.hasExtraMenu && (
                            <div
                              class={`${menu.hasMegaMenu ? "p-5" : ""}`}
                              data-aos="fade-in"
                              data-aos-delay="200">
                              {menu.extraMenuTitle && (
                                <span
                                  class="pb-6 font-semibold h6 inline-block"
                                  set:html={markdownify(menu.extraMenuTitle)}
                                />
                              )}
                              <ul class="space-y-3">
                                {menu.extraMenu &&
                                  menu.extraMenu.map((child) => (
                                    <li>
                                      <a
                                        href={child.url}
                                        aria-label={child.name}
                                        class={`mega-dropdown-list-link block ${
                                          (pathname === `${child.url}/` ||
                                            pathname === child.url) &&
                                          "active"
                                        }`}
                                        set:html={markdownify(child.name)}
                                      />
                                    </li>
                                  ))}
                              </ul>
                            </div>
                          )}
                        </div>
                      </div>
                    )}
                  {menu.hasChildren && !menu.hasMegaMenu && (
                    <ul class="nav-dropdown-list hidden left-0 group-hover:block lg:group-hover:block lg:invisible lg:absolute lg:opacity-0 lg:group-hover:visible lg:group-hover:opacity-100">
                      {menu.children?.map((child) => (
                        <a
                          href={child.url}
                          aria-label={child.name}
                          class={`nav-dropdown-link block py-2 ${
                            (pathname === `${child.url}/` ||
                              pathname === child.url) &&
                            "active"
                          }`}
                          set:html={markdownify(child.name)}
                        />
                      ))}
                    </ul>
                  )}

                  {/* Extra Menu For Mobile Devices */}
                  {menu.hasExtraMenu && (
                    <ul class="nav-dropdown-list hidden lg:invisible lg:absolute lg:opacity-0 lg:group-hover:visible lg:group-hover:opacity-100">
                      {menu.extraMenu &&
                        menu.extraMenu[0] &&
                        menu.extraMenu.map((child) => (
                          <li>
                            <a
                              href={child.url}
                              aria-label={child.name}
                              class={`mega-dropdown-list-link block py-2 ${
                                (pathname === `${child.url}/` ||
                                  pathname === child.url) &&
                                "active"
                              }`}
                              set:html={markdownify(child.name)}
                            />
                          </li>
                        ))}
                    </ul>
                  )}
                </li>
              ) : (
                <li class="nav-item">
                  <a
                    href={menu.url}
                    class={`nav-link ${
                      (pathname === `${menu.url}/` || pathname === menu.url) &&
                      "active"
                    }`}>
                    {menu.name}
                  </a>
                </li>
              )}
            </>
          ))
        }

        <!-- Navigation Button -->
        {
          navigation_button.enable && (
            <li class="mt-4 inline-block lg:hidden">
              <a href={navigation_button.link} class="btn btn-primary btn-sm">
                {navigation_button.label}
              </a>
            </li>
          )
        }
      </ul>

      <!-- Navigation Button For Mobile Devices -->
      <div class="order-1 ml-auto flex items-center md:order-2 lg:ml-0">
        {
          navigation_button.enable && (
            <div class="flex gap-x-2">
              <a
                href={navigation_button.link}
                class="btn btn-sm btn-primary hidden lg:inline-block">
                {navigation_button.label}
              </a>
            </div>
          )
        }
      </div>
    </nav>
  </header>
</div>
