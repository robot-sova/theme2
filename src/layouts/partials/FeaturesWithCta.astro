---
import AnimatedCircles from "@/components/AnimatedCircles.astro";
import type { Features } from "@/types";
import DotTitle from "@/components/DotTitle.astro";
import ImageMod from "@/components/ImageMod.astro";
import { markdownify } from "@/lib/utils/textConverter";
import { getEntry } from "astro:content";

const { features }: { features: Features } = (
  await getEntry("homepage", "-index")
).data;
---

{
  features && (
    <section class="section overflow-hidden">
      <div class="container bg-theme-light pb-10 lg:pb-0">
        <div class="container-inner">
          <div class="md:columns-2 md:gap-8 lg:gap-16">
            <div class="mb-10" data-aos="fade-up-sm">
              {features.subtitle && <DotTitle title={features.subtitle} />}
              {features.title && (
                <h2 class="mb-6" set:html={markdownify(features.title)} />
              )}
              {features.description && (
                <p
                  class="text-lg"
                  set:html={markdownify(features.description)}
                />
              )}
            </div>

            {features.list.map(
              ({ enable, icon, image, title, description }, index: number) =>
                enable && (
                  <div
                    class="shadow bg-white text-center px-5 py-7 md:px-10 md:py-14 lg:py-12 xl:px-7 xl:py-9 mb-10 2xl:mb-16"
                    data-aos={`${index % 2 === 0 ? "fade-right-sm" : "fade-left-sm"}`}>
                    {icon && (
                      <div class="flex justify-center mb-7">
                        <div class="bg-primary p-3 2xl:p-6 rounded-full inline-block">
                          <ImageMod
                            src={icon}
                            alt="icon"
                            class="w-[40px] h-[40px] invert-[-1] brightness-100"
                          />
                        </div>
                      </div>
                    )}
                    {title && (
                      <h3 class="h4 mb-8" set:html={markdownify(title)} />
                    )}
                    {description && (
                      <p
                        class="mb-8 text-base"
                        set:html={markdownify(description)}
                      />
                    )}
                    {image && (
                      <ImageMod
                        src={image}
                        alt="follower-growth"
                        width={464}
                        height={389}
                        class="w-full"
                      />
                    )}
                  </div>
                )
            )}

            {features.cta.enable && (
              <div class="relative isolate" data-aos="fade-up-sm">
                <div class="bg-theme-dark py-7 lg:py-8 px-5 lg:px-10">
                  {features.cta.title && (
                    <h4
                      class="h5 text-white text-center mb-[32px]"
                      set:html={markdownify(features.cta.title)}
                    />
                  )}
                  {features.cta.button.enable && (
                    <div class="flex justify-center">
                      <a
                        href={features.cta.button.link}
                        class="btn btn-primary"
                        set:html={markdownify(features.cta.button.label)}
                      />
                    </div>
                  )}
                </div>
                <div
                  class="absolute bottom-0 left-1/2 -translate-x-1/2 translate-y-1/2 -z-10"
                  data-aos="fade-in">
                  <AnimatedCircles scale={75} />
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </section>
  )
}
